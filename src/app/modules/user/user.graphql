scalar DateTime

type User {
  id: Int!
  role: String!
  firstName: String!
  lastName: String
  email: String!
  password: String!
  isVerified: Boolean!
  isSuspended: Boolean!
}

input CreateUserInput {
  firstName: String!
  lastName: String
  email: String!
  password: String!
}

input UpdateUserInput {
  role: String
  firstName: String
  lastName: String
  email: String
  password: String
  isSuspended: Boolean
}

input VerifyEmailInput {
  email: String!
  otp: String!
}

type Query {
  users: [User]!
  user(id: Int!): User
}

type Mutation {
  updateUser(id: Int!, updateUserInput: UpdateUserInput!): User!
  createUser(createUserInput: CreateUserInput!): User!
  removeUser(id: Int!): User
  verifyEmail(verifyEmailInput: VerifyEmailInput!): User!
}
