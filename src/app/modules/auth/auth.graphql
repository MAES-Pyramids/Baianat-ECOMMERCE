type AuthPayload {
  user: User!
  accessToken: String!
}

type PassResetPayload {
  success: Boolean!
  passToken: String
}

input SignupInput {
  firstName: String!
  lastName: String
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input PassResetInputDto {
  email: String!
  otp: String!
}

type Query {
  me: User
}

type Mutation {
  login(loginInput: LoginInput!): AuthPayload!
  signup(signupInput: SignupInput!): User!
  generateResetPassJWT(passResetInput: PassResetInputDto!): PassResetPayload!
}
